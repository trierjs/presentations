/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import {
  MatchResults,
} from '@stencil/router';

declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  AppHome as AppHome
} from './components/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLStencilElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppProfile as AppProfile
} from './components/app-profile/app-profile';

declare global {
  interface HTMLAppProfileElement extends AppProfile, HTMLStencilElement {
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-profile": JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  MyApp as MyApp
} from './components/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLStencilElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TodoItem as TodoItem
} from './components/todo-item/todo-item';

declare global {
  interface HTMLTodoItemElement extends TodoItem, HTMLStencilElement {
  }
  var HTMLTodoItemElement: {
    prototype: HTMLTodoItemElement;
    new (): HTMLTodoItemElement;
  };
  interface HTMLElementTagNameMap {
    "todo-item": HTMLTodoItemElement;
  }
  interface ElementTagNameMap {
    "todo-item": HTMLTodoItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "todo-item": JSXElements.TodoItemAttributes;
    }
  }
  namespace JSXElements {
    export interface TodoItemAttributes extends HTMLAttributes {
      due?: string;
    }
  }
}


import {
  TodoList as TodoList
} from './components/todo-list/todo-list';

declare global {
  interface HTMLTodoListElement extends TodoList, HTMLStencilElement {
  }
  var HTMLTodoListElement: {
    prototype: HTMLTodoListElement;
    new (): HTMLTodoListElement;
  };
  interface HTMLElementTagNameMap {
    "todo-list": HTMLTodoListElement;
  }
  interface ElementTagNameMap {
    "todo-list": HTMLTodoListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "todo-list": JSXElements.TodoListAttributes;
    }
  }
  namespace JSXElements {
    export interface TodoListAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
